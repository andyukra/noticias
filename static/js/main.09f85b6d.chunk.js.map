{"version":3,"sources":["components/Cardnews.js","components/Pags.js","components/Time.js","components/Query.js","App.js","serviceWorker.js","index.js"],"names":["Cardnews","props","news","data","map","x","i","dateIn","Date","publishedAt","time","toLocaleTimeString","date","toLocaleDateString","content","String","replace","key","className","href","url","src","urlToImage","alt","title","description","source","name","Pags","anterior","page","pageActual","siguiente","onClick","this","React","Component","Time","state","tiempo","obj","hours","getHours","minutes","getMinutes","seconds","getSeconds","dia","setState","setInterval","Query","select","createRef","query","type","buscar","e","preventDefault","country","current","value","onSubmit","ref","placeholder","App","clima","consultarNews","top","all","fetch","then","response","json","result","articles","consultarClima","scroll","document","querySelector","scrollIntoView","getPage","getQuery","mostrarClima","length","icono","weather","icon","Math","floor","main","temp","humidity","Fragment","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.09f85b6d.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Cardnews(props) {\n\n    let news = props.data.map((x, i) => {\n\n        let dateIn = new Date(x.publishedAt);\n        let time = dateIn.toLocaleTimeString();\n        let date = dateIn.toLocaleDateString();\n\n        let reg = /\\[.+?]/g;\n        //eslint-disable-next-line\n        let string = new String(x.content);\n        let content = string.replace(reg, '');\n\n        return(\n            <div key={i} className=\"text-gray-400 bg-gray-800 shadow-lg mt-4 flex flex-col justify-between\">\n                <a href={x.url}>\n                    <img src={x.urlToImage} alt=\"imagen\" className=\"w-full\"/>\n                </a>\n                <div className=\"p-2\">\n                    <p className=\"text-2xl font-bold\">{x.title}</p>\n                </div>\n                <div>\n                    <p className=\"p-2 text-xl\">{x.description}</p>\n                    <p className=\"p-2 my-2 italic text-blue-300\">{content}</p>\n                </div>\n                <div className=\"p-2 flex flex-col items-center bg-black\">\n                    <p className=\"text-xl font-bold\">{x.source.name}</p>\n                    <p>{date}</p>\n                    <p>{time}</p>\n                </div>\n            </div>\n        );\n    });\n\n    return(\n        <div className=\"grid md:grid-cols-2 md:gap-5 my-5\">\n            {news}\n        </div>\n    );\n\n}\n\nexport default Cardnews;","import React from 'react';\n\nclass Pags extends React.Component {\n\n    anterior = () => {\n        let page = this.props.pageActual;\n        if(page <= 0) return null;\n        page -= 1;\n        this.props.data(page);\n    }\n\n    siguiente = () => {\n        let page = this.props.pageActual;\n        page += 1;\n        this.props.data(page);\n    }\n\n\n    render(){\n        return(\n            <div className=\"w-full flex justify-around\">\n                <button onClick={this.anterior} className=\"p-4 font-bold text-3xl text-white bg-red-400 rounded-l-lg shadow-md\">Anterior</button>\n                <button onClick={this.siguiente} className=\"p-4 font-bold text-3xl text-white bg-green-400 rounded-r-lg shadow-md\">Siguiente</button>\n            </div>\n        );\n    }\n\n}\n\nexport default Pags;","import React from 'react';\n\nclass Time extends React.Component {\n\n    state = {\n        time : []\n    }\n\n    tiempo = () => {\n        let time = new Date();\n\n        let obj = {\n            hours : (time.getHours() < 10) ? '0'+time.getHours() : time.getHours(),\n            minutes : (time.getMinutes() < 10) ? '0'+time.getMinutes() : time.getMinutes(),\n            seconds : (time.getSeconds() < 10) ? '0'+time.getSeconds() : time.getSeconds(),\n            dia : time.toLocaleDateString()\n        }\n\n        this.setState({\n            time : obj\n        });\n    }\n\n    componentDidMount() {\n        setInterval(this.tiempo, 1000);\n    }\n\n    render() {\n        return(\n            <div className=\"p-4 flex justify-between items-center\">\n                <p className=\"text-center sm:text-2xl md:text-3xl font-bold text-black\">{this.state.time.dia}</p>\n                <p className=\"text-center sm:text-2xl md:text-3xl font-bold italic text-black ml-3\">{this.state.time.hours} : {this.state.time.minutes} : {this.state.time.seconds} hs</p>\n            </div>\n        );\n    }\n\n}\n\nexport default Time;","import React from 'react';\n\nclass Query extends React.Component {\n\n    select = React.createRef();\n    query = React.createRef();\n    type = React.createRef();\n\n    buscar = (e) => {\n\n        e.preventDefault();\n\n        let country = this.select.current.value;\n        let query = this.query.current.value;\n        let type = this.type.current.value;\n\n        this.props.data(query, country, type);\n\n    }\n\n    render(){\n        return(\n            <form onSubmit={this.buscar} className=\"flex justify-center shadow w-full lg:mr-3\">\n                <input ref={this.query} type=\"text\" className=\"p-2 bg-orange-100 sm:text-lg md:text-2xl font-bold w-full rounded-l-lg\" placeholder=\"Buscar noticia...\"/>\n                <select ref={this.select} className=\"bg-orange-200 font-bold shadow-lg cursor-pointer\">\n                    <option value=\"ar\">Argentina</option>\n                    <option value=\"ru\">Rusia</option>\n                    <option value=\"in\">India</option>\n                </select>\n                <select ref={this.type} className=\"bg-orange-200 font-bold shadow-lg cursor-pointer\">\n                    <option value=\"top\">De Hoy</option>\n                    <option value=\"all\">Todo</option>\n                </select>\n                <input type=\"submit\" value=\"Buscar\" className=\"p-4 cursor-pointer rounded-r-lg font-bold bg-orange-400 text-white text-lg\"/>\n            </form>\n        );\n    }\n\n}\n\nexport default Query;","import React from 'react';\nimport Cardnews from './components/Cardnews';\nimport Pags from './components/Pags';\nimport Time from './components/Time';\nimport Query from './components/Query';\n\nclass App extends React.Component {\n\n  state = {\n    news : [],\n    page : 1,\n    clima : [],\n    country : 'ar',\n    query : '',\n    type : 'top'\n  }\n\n  consultarNews = () => {\n    \n    let obj = {\n      top : `https://newsapi.org/v2/top-headlines?country=${this.state.country}&page=${this.state.page}&pageSize=10&q=${this.state.query}&apiKey=71c746f3446c41d09aa42f685d94ff3b`,\n      all : `https://newsapi.org/v2/everything?q=${this.state.query}&language=es&sortBy=publishedAt&apiKey=71c746f3446c41d09aa42f685d94ff3b`\n    }\n\n    let type = obj.top;\n\n    if(this.state.type === 'all') type = obj.all;\n  \n    fetch(type)\n      .then(response => response.json())\n      .then(result => {\n        this.setState({\n          news : result.articles\n        });\n      });\n  }\n\n  consultarClima = () => {\n    let URL = `https://api.openweathermap.org/data/2.5/weather?q=Buenos%20Aires&units=metric&lang=es&APPID=f9c896edd5d21e5641ca7e1d113648c0`;\n    fetch(URL)\n      .then(response => response.json())\n      .then(result => {\n        this.setState({\n          clima : result\n        });\n      });\n  }\n\n  scroll = () => {\n    let ref = document.querySelector('nav');\n    ref.scrollIntoView('smooth', 'start');\n  }\n\n  getPage = (page) => {\n    this.setState({\n      page\n    }, () => {\n      this.consultarNews();\n      this.scroll();\n    });\n  }\n\n  getQuery = (query, country, type) => {\n    this.setState({\n      query,\n      country,\n      type\n    }, () => {\n      this.consultarNews();\n      this.scroll();\n    });\n  }\n\n  componentDidMount() {\n    this.consultarClima();\n    this.consultarNews();\n  }\n\n  mostrarClima = () => {\n    let clima = this.state.clima;\n    if(clima.length === 0) return null; \n    let icono = `http://openweathermap.org/img/w/${clima.weather[0].icon}.png`;\n    return(\n      <div className=\"lg:px-3 flex items-center justify-center text-white font-bold bg-orange-400 shadow-md\">\n        <div className=\"flex items-center\">\n          <p className=\"mx-2 text-2xl font-bold\">{Math.floor(clima.main.temp)} °C</p>\n          <img src={icono} alt=\"icono\"/>\n        </div>\n        <div className=\"p-2\">\n          <p className=\"text-2xl\">{clima.weather[0].description}</p>\n          <p className=\"text-2xl\">Humedad : {clima.main.humidity} %</p>\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n\n    return(\n      <React.Fragment>\n\n      <nav className=\"bg-blue-300 shadow-inner shadow-2xl\">\n        <h1 className=\"text-5xl text-center text-white font-bold italic pt-3\">NOTICIAS ANDY</h1>\n        <div className=\"lg:flex lg:justify-between bg-orange-200\">\n          <div className=\"md:flex md:justify-between\">\n            {this.mostrarClima()}\n            <Time />\n          </div>\n          <div className=\"flex items-center xl:w-5/12\">\n            <Query data={this.getQuery}/>\n          </div>\n        </div>\n      </nav>\n      <div className=\"container mx-auto\">\n          <Cardnews data={this.state.news}/>\n          <Pags data={this.getPage} pageActual={this.state.page}/>\n      </div>\n\n      </React.Fragment>\n      );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}